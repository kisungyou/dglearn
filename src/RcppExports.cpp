// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _dglearn_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _dglearn_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _dglearn_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _dglearn_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}
// src_dsm_dist2diff
double src_dsm_dist2diff(arma::mat& Px, arma::mat& Py);
RcppExport SEXP _dglearn_src_dsm_dist2diff(SEXP PxSEXP, SEXP PySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type Px(PxSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Py(PySEXP);
    rcpp_result_gen = Rcpp::wrap(src_dsm_dist2diff(Px, Py));
    return rcpp_result_gen;
END_RCPP
}
// src_dsm_spheremean
arma::rowvec src_dsm_spheremean(arma::mat& data, arma::vec& weight, int maxiter, double abstol);
RcppExport SEXP _dglearn_src_dsm_spheremean(SEXP dataSEXP, SEXP weightSEXP, SEXP maxiterSEXP, SEXP abstolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type abstol(abstolSEXP);
    rcpp_result_gen = Rcpp::wrap(src_dsm_spheremean(data, weight, maxiter, abstol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dglearn_rcpparma_hello_world", (DL_FUNC) &_dglearn_rcpparma_hello_world, 0},
    {"_dglearn_rcpparma_outerproduct", (DL_FUNC) &_dglearn_rcpparma_outerproduct, 1},
    {"_dglearn_rcpparma_innerproduct", (DL_FUNC) &_dglearn_rcpparma_innerproduct, 1},
    {"_dglearn_rcpparma_bothproducts", (DL_FUNC) &_dglearn_rcpparma_bothproducts, 1},
    {"_dglearn_src_dsm_dist2diff", (DL_FUNC) &_dglearn_src_dsm_dist2diff, 2},
    {"_dglearn_src_dsm_spheremean", (DL_FUNC) &_dglearn_src_dsm_spheremean, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_dglearn(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
