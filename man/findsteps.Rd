% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/operation_findsteps.R
\name{findsteps}
\alias{findsteps}
\title{Estimate the Diffusion Step Size}
\usage{
findsteps(P, method = c("entmse"))
}
\arguments{
\item{P}{an \eqn{(m\times m)} row-stochastic matrix.}

\item{method}{name of the method to be used, including\describe{
\item{\code{"entmse"}}{changepoint of von Neumann entropy by two linear regression lines (default).}
}}
}
\value{
the estimated step size for \code{P}.
}
\description{
The core idea of diffusion maps is to power the Markov kernel matrix 
a specified number of times in order to see multi-scale aspect of the 
data manifold. While the step size is a job left for users, there exist 
a number of methods to \emph{estimate} the desired step sizes for a diffusion 
operator to take.
}
\examples{
\donttest{
## load 'iris' data
data("iris")

## scale the numerical part
i_dat = as.matrix(scale(iris[,1:4]))

## simple affinity and Markov kernels
i_aff = exp(-as.matrix(stats::dist(i_dat))^2)
i_ker = i_aff/base::rowSums(i_aff)

## compute the optimal step size
t_entmse = dglearn::findsteps(i_ker, method="entmse")

## power the transition matrices at different scales
Pa = dglearn::matpower(i_ker, 1)
Pb = dglearn::matpower(i_ker, 5)
Pc = dglearn::matpower(i_ker, 10)
Pentmse = dglearn::matpower(i_ker, t_entmse)

## visualize
opar <- par(no.readonly=TRUE)
par(mfrow=c(2,3), pty="s")
image(Pa, xaxt="n", yaxt="n", xlab="", ylab="", main="step size=1")
image(Pb, xaxt="n", yaxt="n", xlab="", ylab="", main="step size=5")
image(Pc, xaxt="n", yaxt="n", xlab="", ylab="", main="step size=10")
image(Pentmse, xaxt="n", yaxt="n", xlab="", ylab="", 
      main=paste0("entmse:",t_entmse," steps"))
par(opar)
}

}
\seealso{
\code{\link{matpower}}.
}
\concept{operation}
